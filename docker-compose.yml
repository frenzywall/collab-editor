services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - REACT_APP_SERVER_URL=http://localhost:3001
    restart: unless-stopped
    networks:
      - app-network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - redis

  redis:
    image: redis:8.0-M02-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network    
    command: redis-server --bind redis  --maxmemory 15mb --maxmemory-policy allkeys-lru --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped

  prometheus:
    image: bitnami/prometheus:3.0.1-debian-12-r1
    container_name: prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/rules.yml:/etc/prometheus/rules.yml
      - prometheus_data:/prometheus
    environment:
      - TZ=Asia/Kolkata
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=10d'
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana:11.4.0
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:3002
    ports:
      - "3002:3000"
    networks:
      - app-network
    depends_on:
      - prometheus

  redisinsight:
    image: redislabs/redisinsight:2.64
    container_name: redisinsight
    ports:
      - "5540:5540"  
    networks:
      - app-network
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379 
    depends_on:
      - redis
  redis_exporter:
    image: oliver006/redis_exporter:v1.67.0-alpine
    container_name: redis_exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis:6379  
    networks:
      - app-network
    depends_on:
      - redis

networks:
  app-network:
    driver: bridge

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  redis_data:
    driver: local
